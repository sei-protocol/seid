// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: dex/order_cancellation.proto

package types

import (
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type OrderCancellation struct {
	PositionDirection PositionDirection                      `protobuf:"varint,1,opt,name=positionDirection,proto3,enum=seiprotocol.seichain.dex.PositionDirection" json:"positionDirection,omitempty"`
	Price             github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,2,opt,name=price,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"price" yaml:"price"`
	Quantity          github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,3,opt,name=quantity,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"quantity" yaml:"quantity"`
	PriceDenom        Denom                                  `protobuf:"varint,4,opt,name=priceDenom,proto3,enum=seiprotocol.seichain.dex.Denom" json:"priceDenom,omitempty"`
	AssetDenom        Denom                                  `protobuf:"varint,5,opt,name=assetDenom,proto3,enum=seiprotocol.seichain.dex.Denom" json:"assetDenom,omitempty"`
	PositionEffect    PositionEffect                         `protobuf:"varint,6,opt,name=positionEffect,proto3,enum=seiprotocol.seichain.dex.PositionEffect" json:"positionEffect,omitempty"`
	Leverage          github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,7,opt,name=leverage,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"leverage" yaml:"leverage"`
}

func (m *OrderCancellation) Reset()         { *m = OrderCancellation{} }
func (m *OrderCancellation) String() string { return proto.CompactTextString(m) }
func (*OrderCancellation) ProtoMessage()    {}
func (*OrderCancellation) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f5370cb3f8b430b, []int{0}
}
func (m *OrderCancellation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OrderCancellation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OrderCancellation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OrderCancellation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderCancellation.Merge(m, src)
}
func (m *OrderCancellation) XXX_Size() int {
	return m.Size()
}
func (m *OrderCancellation) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderCancellation.DiscardUnknown(m)
}

var xxx_messageInfo_OrderCancellation proto.InternalMessageInfo

func (m *OrderCancellation) GetPositionDirection() PositionDirection {
	if m != nil {
		return m.PositionDirection
	}
	return PositionDirection_LONG
}

func (m *OrderCancellation) GetPriceDenom() Denom {
	if m != nil {
		return m.PriceDenom
	}
	return Denom_SEI
}

func (m *OrderCancellation) GetAssetDenom() Denom {
	if m != nil {
		return m.AssetDenom
	}
	return Denom_SEI
}

func (m *OrderCancellation) GetPositionEffect() PositionEffect {
	if m != nil {
		return m.PositionEffect
	}
	return PositionEffect_OPEN
}

func init() {
	proto.RegisterType((*OrderCancellation)(nil), "seiprotocol.seichain.dex.OrderCancellation")
}

func init() { proto.RegisterFile("dex/order_cancellation.proto", fileDescriptor_6f5370cb3f8b430b) }

var fileDescriptor_6f5370cb3f8b430b = []byte{
	// 383 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0xd2, 0xc1, 0x4a, 0xeb, 0x40,
	0x14, 0x06, 0xe0, 0xe4, 0xde, 0xb6, 0xf7, 0x3a, 0x48, 0x4b, 0x83, 0x8b, 0x50, 0x24, 0x29, 0x59,
	0x48, 0x41, 0x9a, 0x80, 0xee, 0x5c, 0x28, 0xd6, 0x8a, 0x4b, 0x4b, 0x70, 0xa3, 0x20, 0x92, 0x4e,
	0x4e, 0xd3, 0xc1, 0x24, 0x13, 0x33, 0x53, 0x69, 0xdf, 0xc2, 0xc7, 0xea, 0xb2, 0x2b, 0x11, 0x17,
	0x45, 0xda, 0x37, 0xf0, 0x09, 0x64, 0x26, 0xa6, 0x96, 0x4a, 0x51, 0x71, 0xd5, 0xd3, 0xcc, 0x39,
	0xdf, 0x19, 0xfe, 0x04, 0x6d, 0xfb, 0x30, 0x74, 0x68, 0xea, 0x43, 0x7a, 0x83, 0xbd, 0x18, 0x43,
	0x18, 0x7a, 0x9c, 0xd0, 0xd8, 0x4e, 0x52, 0xca, 0xa9, 0xa6, 0x33, 0x20, 0xb2, 0xc2, 0x34, 0xb4,
	0x19, 0x10, 0xdc, 0xf7, 0x48, 0x6c, 0xfb, 0x30, 0xac, 0x6d, 0x05, 0x34, 0xa0, 0xf2, 0xc8, 0x11,
	0x55, 0xd6, 0x5f, 0xab, 0x08, 0x0d, 0xe2, 0x41, 0xc4, 0xb2, 0x07, 0xd6, 0x63, 0x01, 0x55, 0xcf,
	0x85, 0x7e, 0xb2, 0x84, 0x6b, 0x97, 0xa8, 0x9a, 0x50, 0x46, 0x44, 0xdd, 0x26, 0x29, 0x60, 0x51,
	0xe8, 0x6a, 0x5d, 0x6d, 0x94, 0xf7, 0x76, 0xed, 0x75, 0x2b, 0xed, 0xce, 0xea, 0x88, 0xfb, 0x59,
	0xd1, 0x2e, 0x50, 0x31, 0x49, 0x09, 0x06, 0xfd, 0x4f, 0x5d, 0x6d, 0x6c, 0xb4, 0x0e, 0xc7, 0x53,
	0x53, 0x79, 0x9e, 0x9a, 0x3b, 0x01, 0xe1, 0xfd, 0x41, 0xd7, 0xc6, 0x34, 0x72, 0x30, 0x65, 0x11,
	0x65, 0xef, 0x3f, 0x4d, 0xe6, 0xdf, 0x3a, 0x7c, 0x94, 0x00, 0xb3, 0xdb, 0x80, 0x5f, 0xa7, 0xe6,
	0xe6, 0xc8, 0x8b, 0xc2, 0x03, 0x4b, 0x22, 0x96, 0x9b, 0x61, 0xda, 0x35, 0xfa, 0x7f, 0x37, 0xf0,
	0x62, 0x4e, 0xf8, 0x48, 0xff, 0x2b, 0xe1, 0xe3, 0x1f, 0xc3, 0x95, 0x0c, 0xce, 0x1d, 0xcb, 0x5d,
	0x90, 0xda, 0x11, 0x42, 0x72, 0x4f, 0x1b, 0x62, 0x1a, 0xe9, 0x05, 0x19, 0x84, 0xb9, 0x3e, 0x08,
	0xd9, 0xe6, 0x2e, 0x8d, 0x08, 0xc0, 0x63, 0x0c, 0x78, 0x06, 0x14, 0xbf, 0x09, 0x7c, 0x8c, 0x68,
	0x1d, 0x54, 0xce, 0xb3, 0x3c, 0xed, 0xf5, 0x00, 0x73, 0xbd, 0x24, 0x91, 0xc6, 0xd7, 0xaf, 0x23,
	0xeb, 0x77, 0x57, 0xe6, 0x45, 0x64, 0x21, 0xdc, 0x43, 0xea, 0x05, 0xa0, 0xff, 0xfb, 0x5d, 0x64,
	0xb9, 0x63, 0xb9, 0x0b, 0xb2, 0x75, 0x36, 0x9e, 0x19, 0xea, 0x64, 0x66, 0xa8, 0x2f, 0x33, 0x43,
	0x7d, 0x98, 0x1b, 0xca, 0x64, 0x6e, 0x28, 0x4f, 0x73, 0x43, 0xb9, 0x6a, 0x2e, 0xf1, 0x0c, 0x48,
	0x33, 0xbf, 0xbd, 0xfc, 0x23, 0xaf, 0xef, 0x0c, 0x1d, 0xf1, 0x9d, 0xca, 0x4d, 0xdd, 0x92, 0x3c,
	0xdf, 0x7f, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x6c, 0xb4, 0xc1, 0x89, 0x09, 0x03, 0x00, 0x00,
}

func (m *OrderCancellation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OrderCancellation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OrderCancellation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.Leverage.Size()
		i -= size
		if _, err := m.Leverage.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintOrderCancellation(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x3a
	if m.PositionEffect != 0 {
		i = encodeVarintOrderCancellation(dAtA, i, uint64(m.PositionEffect))
		i--
		dAtA[i] = 0x30
	}
	if m.AssetDenom != 0 {
		i = encodeVarintOrderCancellation(dAtA, i, uint64(m.AssetDenom))
		i--
		dAtA[i] = 0x28
	}
	if m.PriceDenom != 0 {
		i = encodeVarintOrderCancellation(dAtA, i, uint64(m.PriceDenom))
		i--
		dAtA[i] = 0x20
	}
	{
		size := m.Quantity.Size()
		i -= size
		if _, err := m.Quantity.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintOrderCancellation(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	{
		size := m.Price.Size()
		i -= size
		if _, err := m.Price.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintOrderCancellation(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if m.PositionDirection != 0 {
		i = encodeVarintOrderCancellation(dAtA, i, uint64(m.PositionDirection))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintOrderCancellation(dAtA []byte, offset int, v uint64) int {
	offset -= sovOrderCancellation(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *OrderCancellation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PositionDirection != 0 {
		n += 1 + sovOrderCancellation(uint64(m.PositionDirection))
	}
	l = m.Price.Size()
	n += 1 + l + sovOrderCancellation(uint64(l))
	l = m.Quantity.Size()
	n += 1 + l + sovOrderCancellation(uint64(l))
	if m.PriceDenom != 0 {
		n += 1 + sovOrderCancellation(uint64(m.PriceDenom))
	}
	if m.AssetDenom != 0 {
		n += 1 + sovOrderCancellation(uint64(m.AssetDenom))
	}
	if m.PositionEffect != 0 {
		n += 1 + sovOrderCancellation(uint64(m.PositionEffect))
	}
	l = m.Leverage.Size()
	n += 1 + l + sovOrderCancellation(uint64(l))
	return n
}

func sovOrderCancellation(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozOrderCancellation(x uint64) (n int) {
	return sovOrderCancellation(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *OrderCancellation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOrderCancellation
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OrderCancellation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OrderCancellation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PositionDirection", wireType)
			}
			m.PositionDirection = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrderCancellation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PositionDirection |= PositionDirection(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrderCancellation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOrderCancellation
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOrderCancellation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Price.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Quantity", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrderCancellation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOrderCancellation
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOrderCancellation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Quantity.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PriceDenom", wireType)
			}
			m.PriceDenom = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrderCancellation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PriceDenom |= Denom(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AssetDenom", wireType)
			}
			m.AssetDenom = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrderCancellation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AssetDenom |= Denom(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PositionEffect", wireType)
			}
			m.PositionEffect = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrderCancellation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PositionEffect |= PositionEffect(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Leverage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrderCancellation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOrderCancellation
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOrderCancellation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Leverage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOrderCancellation(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthOrderCancellation
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipOrderCancellation(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowOrderCancellation
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowOrderCancellation
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowOrderCancellation
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthOrderCancellation
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupOrderCancellation
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthOrderCancellation
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthOrderCancellation        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowOrderCancellation          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupOrderCancellation = fmt.Errorf("proto: unexpected end of group")
)
