// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: dex/order_cancellation.proto

package types

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type OrderCancellation struct {
	Long       bool   `protobuf:"varint,1,opt,name=long,proto3" json:"long,omitempty"`
	Price      uint64 `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
	Quantity   uint64 `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	PriceDenom string `protobuf:"bytes,4,opt,name=priceDenom,proto3" json:"priceDenom,omitempty"`
	AssetDenom string `protobuf:"bytes,5,opt,name=assetDenom,proto3" json:"assetDenom,omitempty"`
	Open       bool   `protobuf:"varint,6,opt,name=open,proto3" json:"open,omitempty"`
	Leverage   string `protobuf:"bytes,7,opt,name=leverage,proto3" json:"leverage,omitempty"`
}

func (m *OrderCancellation) Reset()         { *m = OrderCancellation{} }
func (m *OrderCancellation) String() string { return proto.CompactTextString(m) }
func (*OrderCancellation) ProtoMessage()    {}
func (*OrderCancellation) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f5370cb3f8b430b, []int{0}
}
func (m *OrderCancellation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OrderCancellation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OrderCancellation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OrderCancellation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderCancellation.Merge(m, src)
}
func (m *OrderCancellation) XXX_Size() int {
	return m.Size()
}
func (m *OrderCancellation) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderCancellation.DiscardUnknown(m)
}

var xxx_messageInfo_OrderCancellation proto.InternalMessageInfo

func (m *OrderCancellation) GetLong() bool {
	if m != nil {
		return m.Long
	}
	return false
}

func (m *OrderCancellation) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *OrderCancellation) GetQuantity() uint64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *OrderCancellation) GetPriceDenom() string {
	if m != nil {
		return m.PriceDenom
	}
	return ""
}

func (m *OrderCancellation) GetAssetDenom() string {
	if m != nil {
		return m.AssetDenom
	}
	return ""
}

func (m *OrderCancellation) GetOpen() bool {
	if m != nil {
		return m.Open
	}
	return false
}

func (m *OrderCancellation) GetLeverage() string {
	if m != nil {
		return m.Leverage
	}
	return ""
}

func init() {
	proto.RegisterType((*OrderCancellation)(nil), "seiprotocol.seichain.dex.OrderCancellation")
}

func init() { proto.RegisterFile("dex/order_cancellation.proto", fileDescriptor_6f5370cb3f8b430b) }

var fileDescriptor_6f5370cb3f8b430b = []byte{
	// 259 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xb1, 0x4e, 0xc3, 0x30,
	0x18, 0x84, 0x63, 0x48, 0x4b, 0xf1, 0x86, 0xc5, 0x60, 0x21, 0x64, 0x45, 0x4c, 0x59, 0x9a, 0x0c,
	0xbc, 0x01, 0x20, 0x31, 0x22, 0x65, 0x64, 0x41, 0xae, 0xf3, 0x2b, 0xb5, 0x94, 0xfa, 0x0f, 0xb6,
	0x8b, 0xd2, 0xb7, 0xe0, 0xb1, 0x60, 0xeb, 0xc8, 0x88, 0x92, 0x17, 0x41, 0x76, 0x44, 0xdb, 0xed,
	0xee, 0xff, 0x7c, 0xf2, 0xe9, 0xe8, 0x6d, 0x0d, 0x7d, 0x89, 0xb6, 0x06, 0xfb, 0xa6, 0xa4, 0x51,
	0xd0, 0xb6, 0xd2, 0x6b, 0x34, 0x45, 0x67, 0xd1, 0x23, 0xe3, 0x0e, 0x74, 0x54, 0x0a, 0xdb, 0xc2,
	0x81, 0x56, 0x6b, 0xa9, 0x4d, 0x51, 0x43, 0x7f, 0xf7, 0x4d, 0xe8, 0xd5, 0x4b, 0x88, 0x3d, 0x9e,
	0xa4, 0x18, 0xa3, 0x69, 0x8b, 0xa6, 0xe1, 0x24, 0x23, 0xf9, 0xa2, 0x8a, 0x9a, 0x5d, 0xd3, 0x59,
	0x67, 0xb5, 0x02, 0x7e, 0x96, 0x91, 0x3c, 0xad, 0x26, 0xc3, 0x6e, 0xe8, 0xe2, 0x7d, 0x2b, 0x8d,
	0xd7, 0x7e, 0xc7, 0xcf, 0x23, 0x38, 0x78, 0x26, 0x28, 0x8d, 0x8f, 0x9e, 0xc0, 0xe0, 0x86, 0xa7,
	0x19, 0xc9, 0x2f, 0xab, 0x93, 0x4b, 0xe0, 0xd2, 0x39, 0xf0, 0x13, 0x9f, 0x4d, 0xfc, 0x78, 0x09,
	0x2d, 0xb0, 0x03, 0xc3, 0xe7, 0x53, 0x8b, 0xa0, 0xc3, 0x7f, 0x2d, 0x7c, 0x80, 0x95, 0x0d, 0xf0,
	0x8b, 0x98, 0x38, 0xf8, 0x87, 0xe7, 0xaf, 0x41, 0x90, 0xfd, 0x20, 0xc8, 0xef, 0x20, 0xc8, 0xe7,
	0x28, 0x92, 0xfd, 0x28, 0x92, 0x9f, 0x51, 0x24, 0xaf, 0xcb, 0x46, 0xfb, 0xf5, 0x76, 0x55, 0x28,
	0xdc, 0x94, 0x0e, 0xf4, 0xf2, 0x7f, 0x8b, 0x68, 0xe2, 0x18, 0x65, 0x5f, 0x86, 0x05, 0xfd, 0xae,
	0x03, 0xb7, 0x9a, 0x47, 0x7e, 0xff, 0x17, 0x00, 0x00, 0xff, 0xff, 0xc3, 0xc9, 0xb5, 0x6b, 0x55,
	0x01, 0x00, 0x00,
}

func (m *OrderCancellation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OrderCancellation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OrderCancellation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Leverage) > 0 {
		i -= len(m.Leverage)
		copy(dAtA[i:], m.Leverage)
		i = encodeVarintOrderCancellation(dAtA, i, uint64(len(m.Leverage)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Open {
		i--
		if m.Open {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if len(m.AssetDenom) > 0 {
		i -= len(m.AssetDenom)
		copy(dAtA[i:], m.AssetDenom)
		i = encodeVarintOrderCancellation(dAtA, i, uint64(len(m.AssetDenom)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.PriceDenom) > 0 {
		i -= len(m.PriceDenom)
		copy(dAtA[i:], m.PriceDenom)
		i = encodeVarintOrderCancellation(dAtA, i, uint64(len(m.PriceDenom)))
		i--
		dAtA[i] = 0x22
	}
	if m.Quantity != 0 {
		i = encodeVarintOrderCancellation(dAtA, i, uint64(m.Quantity))
		i--
		dAtA[i] = 0x18
	}
	if m.Price != 0 {
		i = encodeVarintOrderCancellation(dAtA, i, uint64(m.Price))
		i--
		dAtA[i] = 0x10
	}
	if m.Long {
		i--
		if m.Long {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintOrderCancellation(dAtA []byte, offset int, v uint64) int {
	offset -= sovOrderCancellation(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *OrderCancellation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Long {
		n += 2
	}
	if m.Price != 0 {
		n += 1 + sovOrderCancellation(uint64(m.Price))
	}
	if m.Quantity != 0 {
		n += 1 + sovOrderCancellation(uint64(m.Quantity))
	}
	l = len(m.PriceDenom)
	if l > 0 {
		n += 1 + l + sovOrderCancellation(uint64(l))
	}
	l = len(m.AssetDenom)
	if l > 0 {
		n += 1 + l + sovOrderCancellation(uint64(l))
	}
	if m.Open {
		n += 2
	}
	l = len(m.Leverage)
	if l > 0 {
		n += 1 + l + sovOrderCancellation(uint64(l))
	}
	return n
}

func sovOrderCancellation(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozOrderCancellation(x uint64) (n int) {
	return sovOrderCancellation(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *OrderCancellation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOrderCancellation
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OrderCancellation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OrderCancellation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Long", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrderCancellation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Long = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			m.Price = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrderCancellation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Price |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Quantity", wireType)
			}
			m.Quantity = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrderCancellation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Quantity |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PriceDenom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrderCancellation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOrderCancellation
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOrderCancellation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PriceDenom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AssetDenom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrderCancellation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOrderCancellation
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOrderCancellation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AssetDenom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Open", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrderCancellation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Open = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Leverage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrderCancellation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOrderCancellation
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOrderCancellation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Leverage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOrderCancellation(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthOrderCancellation
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipOrderCancellation(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowOrderCancellation
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowOrderCancellation
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowOrderCancellation
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthOrderCancellation
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupOrderCancellation
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthOrderCancellation
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthOrderCancellation        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowOrderCancellation          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupOrderCancellation = fmt.Errorf("proto: unexpected end of group")
)
